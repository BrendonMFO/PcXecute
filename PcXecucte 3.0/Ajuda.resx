<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>DEFINIR QUANTIDADE DE VEZES QUE O COMANDO PODERA SER EXECUTADO
Defina o Valor do campo VEZES.
-1 = Infinito.

Para especificar caracteres que não são exibidos quando você pressiona uma tecla, como ENTER ou TAB 
e chaves que representam ações em vez de caracteres, use os códigos na tabela a seguir.

Chave Código
BACKSPACE                                                                                           {BACKSPACE}, {BS} ou {BKSP}
BREAK                                                                                                    {BREAK}
CAPS LOCK                                                                                             {CAPSLOCK}
DEL ou DELETE                                                                                       {DELETE} ou {DEL}
SETA PARA BAIXO                                                                                  {DOWN}
END                                                                                                         {END}
ENTER                                                                                                     {ENTER} ou ~
ESC                                                                                                          {ESC}
HELP                                                                                                        {HELP}
HOME                                                                                                      {HOME}
INS ou inserir                                                                                           {INSERT} ou {INS}
SETA À ESQUERDA                                                                                 {LEFT}
NUM LOCK                                                                                              {NUMLOCK}
PAGE DOWN                                                                                           {PGDN}
PAGE UP                                                                                                  {PGUP}
PRINT SCREEN                                                                                        {PRTSC} (reservado para uso futuro)
SETA À DIREITA                                                                                      {RIGHT}
SCROLL LOCK                                                                                          {SCROLLLOCK}
TAB                                                                                                          {TAB}
SETA PARA CIMA                                                                                    {UP}
F1                                                                                                             {F1 }
F2                                                                                                             {F2}
F3                                                                                                             {F3}
F4                                                                                                             {F4}
F5                                                                                                             {F5}
F6                                                                                                             {F6}
F7                                                                                                             {F7}
F8                                                                                                             {F8}
F9                                                                                                             {F9}
F1 0                                                                                                          {F10}
F1 1                                                                                                          {F11}
F1 2                                                                                                          {F12}
F1 3                                                                                                          {F13}
F1 4                                                                                                          {F14}
F1 5                                                                                                          {F15}
F1 6                                                                                                          {F16}
Adicionar de teclado                                                                              {ADD}
Subtrair do teclado numérico                                                                {SUBTRACT}
Multiplicar de teclado                                                                            {MULTIPLY}
Divisão do teclado numérico                                                                 {DIVIDE}

Para especificar teclas combinadas com qualquer combinação de SHIFT, CTRL e ALT chaves, 
preceda o código com um ou mais dos seguintes códigos de tecla.

Chave Código
SHIFT    +
CTRL     ^
ALT       %

Para especificar que qualquer combinação de SHIFT, CTRL e ALT deve ser mantida pressionada enquanto várias outras teclas forem
pressionadas, coloque o código para essas chaves entre parênteses. Por exemplo, para especificar a manter a tecla SHIFT pressionada
enquanto e e c são pressionadas, use "+ (EC)". Para especificar a manter a tecla SHIFT pressionada enquanto e é pressionado, seguido
por c sem SHIFT, use "+ EC".
Para especificar teclas de repetição, use o formulário {chave number}. Você deve colocar um espaço entre chave e número . Por
exemplo, {esquerda 42} significa pressionar a tecla de seta para a esquerda 42 vezes; {h 1 0} significa pressionar que h 1 0 vezes

Ir para um slide especifico no POWER POINT
digite o numero do slide, depois + EXEMPLO: 10+
</value>
  </data>
</root>